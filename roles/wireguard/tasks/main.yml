
- name: Add wireguard repo
  yum_repository:
    name: wireguard
    description: wireguard
    baseurl: https://download.copr.fedorainfracloud.org/results/jdoss/wireguard/epel-7-$basearch/
    gpgcheck: yes
    repo_gpgcheck: no
    gpgkey: https://download.copr.fedorainfracloud.org/results/jdoss/wireguard/pubkey.gpg
    skip_if_unavailable: yes
    enabled: yes

# Apply system updates to avoid potenial
# kernal mismatch errors with wireguard
- name: Upgrade all packages
  yum:
    name: '*'
    state: latest
  register: update

- name: Reboot
  reboot:    
  when: update.changed   

- name: Install packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - amazon-linux-extras
      - wireguard-dkms
      - wireguard-tools
      - qrencode

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    reload: yes
    state: present

- name: Create configuration directory
  file:
    path: /etc/wireguard
    state: directory

- name: Check if wg0.conf exists
  stat:
    path: /etc/wireguard/wg0.conf
  register: config_file_stat

#### Server key pair
- block:

  - name: Read wireguard config file
    slurp:
      src: "/etc/wireguard/wg0.conf"
    register: wireguard_config

  - name: Create server private key fact from existing key
    set_fact:
      server_private_key: "{{ wireguard_config['content'] | b64decode | regex_findall('PrivateKey = (.*)') | first }}"

  when: config_file_stat.stat.exists

- block:

  - name: Create new server private key
    command: "wg genkey"
    register: server_private_key_result

  - name: Create new server private key fact
    set_fact:
      server_private_key: "{{ server_private_key_result.stdout }}"
  
  when: config_file_stat.stat.exists == False

- name: Generate server public key
  shell: "echo {{ server_private_key }} | wg pubkey"
  register: server_public_key_result
  changed_when: false

- name: Create server public key fact
  set_fact:
    server_public_key: "{{ server_public_key_result.stdout }}"

#### Client key pair

- name: Create new client private key
  command: "wg genkey"
  register: client_private_key_result

- name: Create new client private key fact
  set_fact:
    client_private_key: "{{ client_private_key_result.stdout }}"
  
- name: Generate client public key
  shell: "echo {{ client_private_key }} | wg pubkey"
  register: client_public_key_result
  changed_when: false

- name: Create client public key fact
  set_fact:
    client_public_key: "{{ client_public_key_result.stdout }}"
####

- name: Create wg0.conf
  template:
    src: wg0.conf.j2
    dest: /etc/wireguard/wg0.conf
    mode: '0600'

- name: Start WireGuard 
  service:
    name: "wg-quick@wg0"
    state: started
    enabled: yes

- name: Create client wg0.conf
  template:
    src: client.conf.j2
    dest: /tmp/client.wg0.conf

- name: Generate qrcode
  shell: >
    qrencode < "/tmp/client.wg0.conf"
    --type PNG \
    --size 4 \
    --level L \
    --output "/tmp/client.wg0.png"  

- name: Copy config to local machine
  fetch:
    src: "/tmp/{{ item }}"
    dest: "~/.ssh/{{ item }}"
    flat: yes
  loop:
    - client.wg0.conf
    - client.wg0.png